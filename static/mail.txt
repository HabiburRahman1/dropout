
#Extracting the json file
json_file=open('classifier2.json','r')
loaded_model_json=json_file.read()
json_file.close()
loaded_model=model_from_json(loaded_model_json)

#load weights into new model
loaded_model.load_weights('classifier2.h5')
print('loaded model from disk')


#compiling the loaded model
loaded_model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])



#evaluate the loaded model from an example
list = [[1,1,2016,56,4,2,5,12,7,19,3.43,3.50,3.98,24,16,7,1,1,2,100001,0,1998,5,2,106642,1,1999,4.0,1,3,2008,3.56,2,1,2,1,2,1,1,106,3,2,2,2,2,1450,4,3,1,0,145],              
            [1,1,2016,56,4,2,5,12,7,19,3.43,3.50,3.98,24,16,7,1,1,2,100961,0,2000,5,2,10000,1,1999,4.0,1,3,2008,3.56,2,1,2,1,2,1,1,106,3,2,2,2,2,1150,4,3,1,0,145],
            [1,1,2016,56,4,2,5,12,7,19,3.43,3.50,3.98,24,16,7,1,1,2,100001,0,1998,5,2,106642,1,1999,4.0,1,3,2008,3.56,2,1,2,1,2,1,1,106,3,2,2,2,2,1450,4,3,1,0,145],              
            [1,1,2016,56,4,2,5,12,7,19,3.43,3.50,3.98,24,16,7,1,1,2,100961,0,2000,5,2,10000,1,1999,4.0,1,3,2008,3.56,2,1,2,1,2,1,1,106,3,2,2,2,2,1150,4,3,1,0,145]]


#putting the list into x
x=np.array(list)

#getting the probability for our example dataset
new_prediction = loaded_model.predict(sc.fit_transform(x))
